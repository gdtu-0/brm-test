version: '3'
services:
  # Dagster
  dagster:
    build:
      context: .
      dockerfile: dagster/Dockerfile
    container_name: dagster
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./dagster/brm_test:/opt/dagster/app/brm_test
    ports:
      - 3000:3000
    networks:
      - brm_test_network
    depends_on:
      postgres:
        condition: service_healthy
      opensearch:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
  # PostgreSQL
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - CLICKHOUSE_DB=${CLICKHOUSE_DB}
      - CLICKHOUSE_USER=${CLICKHOUSE_USER}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - 5432:5432
    networks:
      - brm_test_network
  # Opensearch
  opensearch:
    image: opensearchproject/opensearch:latest
    container_name: opensearch
    environment:
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
      - "OPENSEARCH_JAVA_OPTS=-Xms1024m -Xmx1024m" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
      - bootstrap.memory_lock=true # along with the memlock settings below, disables swapping
      - discovery.type=single-node # not running cluster
    ulimits:
      memlock: # Set memlock to unlimited (no soft or hard limit)
        soft: -1
        hard: -1
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "1"
    healthcheck:
      test: curl https://127.0.0.1:9200 -k || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
    networks:
      - brm_test_network
  # Clickhouse
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    environment:
      - CLICKHOUSE_DB=${CLICKHOUSE_DB}
      - CLICKHOUSE_USER=${CLICKHOUSE_USER}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
    healthcheck:
      test: wget --no-verbose --tries=1 http://127.0.0.1:8123/ping || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - 8123:8123
      - 8443:8443
      - 9000:9000
    networks:
      - brm_test_network
networks:
  brm_test_network:
    driver: bridge
    name: brm_test_network
